
:root {
  --editor-tile-sprite-img: url('assets/graphics/editor-tiles.png');
  --editor-tile-sprite-background-size: 800px 32px;
  --editor-tile-sprite-width: 32px;
  --editor-tile-sprite-height: 32px;
  --editor-tool-sprite-img: url('assets/graphics/editor-tools-200.png');
  --editor-tool-sprite-background-size: 480px 48px;
  --editor-tool-sprite-width: 48px;
  --editor-tool-sprite-height: 48px;
  --editor-bg-color: #111;
  --grid-bg-color-1: #263646;
  --grid-bg-color-2: #374757;
  --channel-color-yellow: #c29b4e;
  --channel-color-red: #cd6543;
  --channel-color-blue: #559bd5;
  --button-bg: #556772;
}

body, html {
  color: #fafafa;
  font-family: 'BIOSfontII', 'VT323', monospace;
}

canvas {
  font-family: 'MiniMOOD', 'VT323', monospace;
}

button:focus:before {
  display: none;
}
button {
  border-width: 0px;
  background: var(--button-bg);
}

.disableScroll {
  overflow: hidden;
}

.layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  @media (max-width: 1199px) {
    & {
      align-items: flex-start;
    }
  }
}

.container {
  max-width: 900px;
  padding-left: 30px;
  padding-right: 30px;
  @media (max-width: 1199px) {
    & {
      min-width: calc(100vw - 60px);
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

.stack {
  display: flex;
  align-items: center;
  justify-content: center;
  &.row {
    flex-direction: row;
  }
  &.col {
    flex-direction: column;
  }
  &.alignStart {
    align-items: flex-start;
  }
  &.alignEnd {
    align-items: flex-end;
  }
  &.alignStretch {
    align-items: stretch;
  }
  &.justifyStart {
    justify-content: flex-start;
  }
  &.justifyEnd {
    justify-content: flex-end;
  }
}

.mainTitle {
  font-family: 'MiniMOOD', 'VT323', monospace;
  font-size: 2em;
  padding-top: 15px;
  text-shadow: -1px 4px #5a572e;
  margin: 10px;
  color: aqua;
}

.editorTitle {
  font-family: 'MiniMOOD', 'VT323', monospace;
  text-shadow: -1px 4px #5a572e;
  font-size: 1.3em;
  line-height: 1em;
  padding: 0;
  margin: 0;
  transform: translateY(7px);
  margin-left: 127px;
}

.canvasContainer {
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  justify-content: center;
  min-width: 600px;
  min-height: 600px;
  font-family: 'MiniMOOD', 'VT323', monospace;
  color: slategray;
}

.mapBottomInfo {
  width: 640px;
  margin-left: 128px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-family: "Courier New", monospace;
  font-size: 0.8em;
  color: #88939b;

  & .item {
    margin-right: 10px;
  }

  & .val {
    color: #ccc;
  }
}

.gridCell {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  box-sizing: border-box;
  font-family: 'BIOSfontII', 'VT323', monospace;
  font-size: 0.6em;
  vertical-align: bottom;
  background: var(--grid-bg-color-1);
  color: slategray;
  &:nth-child(2n) {
    background: var(--grid-bg-color-2);
  }
  &.invert {
    background: var(--grid-bg-color-2);
  }
  &.invert:nth-child(2n) {
    background: var(--grid-bg-color-1);
  }
  &.active, &.active:nth-child(2n) {
    background: #eee;
    color: #333;
  }
}

.editorContainer {
  position: relative;
  display: inline-flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: center;
  background: var(--editor-bg-color);
  border-radius: 6px;
  /* margin-top: 20px; */
}


.editorTiles {
  position: relative;
  display: flex;
  flex-direction: column;
  padding-right: 5px;
  z-index: 10;

  & .tooltip {
    display: none!important;
    right: 100%;
    left: inherit;
    top: 4px;
    bottom: inherit;
    margin-right: 4px;
    filter: none;
  }

  & .shortcut {
    font-family: "VT323", monospace;
    font-size: 0.7em;
    color: #5b5b5b;
    margin-right: 3px;
  }
}
.editorTileSprite {
  display: inline-block;
  background-color: inherit;
  background-image: var(--editor-tile-sprite-img);
  background-size: var(--editor-tile-sprite-background-size);
  width: var(--editor-tile-sprite-width);
  height: var(--editor-tile-sprite-height);
  padding: 0px;
  margin: 1px;
  margin-bottom: 3px;
  border-radius: 0px;
  border: none;
  background-position: 0px 0px;
  filter: brightness(0.25) grayscale(0.5);
  &:hover {
    filter: brightness(0.75) grayscale(0.8);
  }
  &:hover .tooltip {
    display: block!important;
    filter: none;
  }
  &.active {
    filter: none;
  }
  &.barrier {
    background-position-x: calc(0 * var(--editor-tile-sprite-width));
  }
  &.passable {
    background-position-x: calc(-1 * var(--editor-tile-sprite-width));
  }
  &.door {
    background-position-x: calc(-2 * var(--editor-tile-sprite-width));
  }
  &.deco1 {
    background-position-x: calc(-3 * var(--editor-tile-sprite-width));
  }
  &.deco2 {
    background-position-x: calc(-4 * var(--editor-tile-sprite-width));
  }
  &.apple {
    background-position-x: calc(-5 * var(--editor-tile-sprite-width));
  }
  &.nospawn {
    background-position-x: calc(-6 * var(--editor-tile-sprite-width));
  }
  &.lock {
    background-position-x: calc(-7 * var(--editor-tile-sprite-width));
  }
  &.key {
    background-position-x: calc(-8 * var(--editor-tile-sprite-width));
  }
  &.portal {
    background-position-x: calc(-9 * var(--editor-tile-sprite-width));
  }
  &.spawn {
    background-position-x: calc(-10 * var(--editor-tile-sprite-width));
  }
}

.editorTools {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding-bottom: 3px;
  width: 100%;
}
.editorToolsOffset {
  margin-left: 39px;
}
.editorToolSprite {
  display: inline-block;
  background-color: inherit;
  background-image: var(--editor-tool-sprite-img);
  background-size: var(--editor-tool-sprite-background-size);
  width: var(--editor-tool-sprite-width);
  height: var(--editor-tool-sprite-height);
  padding: 0px;
  margin: 3px;
  border-radius: 0px;
  border: none;
  background-position: 0px 0px;
  filter: brightness(0.5) grayscale(0.5);
  &.active {
    filter: none;
  }
  &:hover {
    filter: none;
  }
  &.pencil.active {
    background-position-x: calc(0 * var(--editor-tool-sprite-width));
  }
  &.pencil {
    background-position-x: calc(-1 * var(--editor-tool-sprite-width));
  }
  &.eraser.active {
    background-position-x: calc(-2 * var(--editor-tool-sprite-width));
  }
  &.eraser {
    background-position-x: calc(-3 * var(--editor-tool-sprite-width));
  }
  &.rectangle.active {
    background-position-x: calc(-4 * var(--editor-tool-sprite-width));
  }
  &.rectangle {
    background-position-x: calc(-5 * var(--editor-tool-sprite-width));
  }
  &.line.active {
    background-position-x: calc(-6 * var(--editor-tool-sprite-width));
  }
  &.line {
    background-position-x: calc(-7 * var(--editor-tool-sprite-width));
  }
}


.editorTileSidebar {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding-left: 5px;
  padding-right: 5px;
  width: 70px;
  text-align: center;

  & > div {
    display: flex;
    flex-direction: column;
  }

  & label {
    font-family: "BIOSfontII", "VT323", monospace;
    font-size: 1em;
    color: #fff;
    color: #bcc2c2;
  }

  & button {
    font-family: 'MiniMOOD', 'VT323', monospace;
    font-size: 1em;
    display: inline-block;
    margin: 3px;
    padding-top: 6px;
    padding-bottom: 0;
    border: 2px solid transparent;
    filter: brightness(0.5) grayscale(1);
    &:hover { filter: brightness(0.8) grayscale(0.8); }
    &.active { filter: none; border-color: #fff; }
  }
  & .keyChannelSelect.active > button { filter: none; border-color: #fff; }
  & .keyChannelYellow.active > button { background-color: var(--channel-color-yellow); }
  & .keyChannelRed.active > button { background-color: var(--channel-color-red); }
  & .keyChannelBlue.active > button { background-color: var(--channel-color-blue); }
  & .keyChannelYellow .keyChannelColorPreview { background-color: var(--channel-color-yellow); }
  & .keyChannelRed .keyChannelColorPreview { background-color: var(--channel-color-red); }
  & .keyChannelBlue .keyChannelColorPreview { background-color: var(--channel-color-blue); }
  & button.portalChannel,
  & .keyChannelSelect > button {
    color: #fff;
    padding-left: 25px;
    padding-right: 15px;
  }
  & button.portalChannel.active {
    color: #111;
  }
  & .portalChannelSelect,
  & .keyChannelSelect {
    position: relative;
  }
  & .portalChannelColorPreview,
  & .keyChannelColorPreview {
    position: absolute;
    width: 10px;
    height: 20px;
    top: 8px;
    left: 15px;
    z-index: 10;
    border-radius: 2px;
  }
  & .keyChannelSelect.active .keyChannelColorPreview {
    background-color: rgb(17 17 17 / 10%);
  }
}


.previewMapButton {
  margin-left: 40px;
}

.mapPreviewOverlay {
  display: block;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0,0,0,0.5);
  z-index: 1000;
}

.mapPreviewLayout {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
}

.mapPreviewContainer {
  position: relative;
  display: flex;
  width: 600px;
  height: 600px;
  padding: 2px;
  background: black;
  border: 2px solid #ccc;
  border-radius: 4px;
  box-shadow: -2px 2px 4px 2px black;

  & .closeButton {
    position: absolute;
    display: inline-block;
    top: 3px;
    right: 3px;
    width: 20px;
    height: 20px;
    padding: 3px;
    box-sizing: content-box;
  }

  & .fullscreenButton {
    position: absolute;
    display: inline-block;
    top: 100%;
    margin-top: 6px;
    right: -2px;
    width: 48px;
    height: 48px;
    padding: 0px;
    box-sizing: content-box;
    /* border: 2px solid #ffffff5c; */
    border: 2px solid #91a3c3;

    &:hover {
      border-color: #fff;
    }

    & img {
      width: 100%;
      height: 100%;
    }
  }
}

.mapPreview {
  display: block;
  border: none;
}


.loader {
  position: relative;
  width: 55px;
  height: 55px;
  background-repeat: no-repeat;
  background-image: linear-gradient(#FFF 50px, transparent 0),
                    linear-gradient(#FFF 50px, transparent 0),
                    linear-gradient(#FFF 50px, transparent 0),
                    linear-gradient(#FFF 50px, transparent 0),
                    linear-gradient(#FFF 50px, transparent 0),
                    linear-gradient(#FFF 50px, transparent 0);
  background-size: 5px 40px;
  background-position: 0px center, 10px center, 20px center, 30px center, 40px center, 50px center;
  animation: loaderSpikeUp 1s linear infinite alternate;
}
@keyframes loaderSpikeUp {
0% { background-size: 5px 40px}
16% { background-size: 5px 55px, 5px 40px, 5px 40px, 5px 40px, 5px 40px, 5px 40px}
33% { background-size: 5px 40px, 5px 55px, 5px 40px, 5px 40px, 5px 40px, 5px 40px}
50% { background-size: 5px 40px, 5px 40px, 5px 55px, 5px 40px, 5px 40px, 5px 40px}
66% { background-size: 5px 40px, 5px 40px, 5px 40px, 5px 55px, 5px 40px, 5px 40px}
83% { background-size: 5px 40px, 5px 40px, 5px 40px, 5px 40px, 5px 55px, 5px 40px}
100% { background-size: 5px 40px, 5px 40px, 5px 40px, 5px 40px, 5px 40px, 5px 55px}
}


.toastContainer {
  font-family: 'BIOSfontII', 'VT323', monospace;
}

.toast {
  font-family: 'BIOSfontII', 'VT323', monospace;
}

.toastSuccess {
  background: #7ad9cd!important;
}

.toastError {
  background: #eba895 !important;
}

.toastUndo {
  background: #000!important;
  color: #ddd!important
}

.toastRedo {
  background: #000!important;
  color: #7ad9cd!important;
}
